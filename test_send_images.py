#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ endpoint –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import requests
import json

def test_send_images_endpoint():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoint /send-images
    """
    url = "http://localhost:8001/send-images"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_payload = {
        "recipient": "+79246506083",
        "image_urls": [
            "https://picsum.photos/400/300?random=1",
            "https://picsum.photos/400/300?random=2"
        ],
        "caption": "–¢–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ API"
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint /send-images")
    print("=" * 50)
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:")
    print(json.dumps(test_payload, indent=2, ensure_ascii=False))
    print()
    
    try:
        response = requests.post(
            url,
            json=test_payload,
            headers={"Content-Type": "application/json"},
            timeout=30
        )
        
        print(f"üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"Status Code: {response.status_code}")
        print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def test_validation_errors():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    """
    url = "http://localhost:8001/send-images"
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    test_cases = [
        {
            "name": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            "payload": {
                "recipient": "+79246506083",  # –ë–µ–∑ +
                "image_urls": ["https://picsum.photos/400/300?random=1"]
            }
        },
        {
            "name": "–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
            "payload": {
                "recipient": "+79246506083",
                "image_urls": []
            }
        },
        {
            "name": "–ù–µ–≤–µ—Ä–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
            "payload": {
                "recipient": "+79246506083",
                "image_urls": ["not-a-valid-url"]
            }
        }
    ]
    
    for test_case in test_cases:
        print(f"\nüìã –¢–µ—Å—Ç: {test_case['name']}")
        try:
            response = requests.post(
                url,
                json=test_case['payload'],
                headers={"Content-Type": "application/json"},
                timeout=10
            )
            print(f"Status Code: {response.status_code}")
            if response.status_code != 200:
                print(f"–û—à–∏–±–∫–∞ (–æ–∂–∏–¥–∞–µ–º–æ): {response.json()}")
            else:
                print("‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç")
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        health_response = requests.get("http://localhost:8001/", timeout=5)
        if health_response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
            test_send_images_endpoint()
            test_validation_errors()
        else:
            print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: uvicorn src.main:app --reload --host 0.0.0.0 --port 8000")